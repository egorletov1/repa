import os

from telebot.async_telebot import AsyncTeleBot
from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from dotenv import load_dotenv, find_dotenv



load_dotenv(find_dotenv())

TOKEN = os.getenv("TOKEN")


bot = AsyncTeleBot(TOKEN, parse_mode="HTML")


@bot.message_handler(commands={"start"})
async def send_welcome(message):
    chat_id = message.from_user.id
    await bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è,–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", disable_notification=True, protect_content=True)

@bot.message_handler(commands={"text"})
async def send_welcome(message):
    chat_id = message.from_user.id
    await bot.delete_message(chat_id, message.id)

@bot.message_handler(commands={"f1"})
async def send_welcome(message):
    chat_id = message.from_user.id


    await bot.send_message(chat_id, "<b>–∂–∏—Ä–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω—ã–π —Ç–µ–∫—Å—Ç</b>")

@bot.message_handler(commands={"f2"})
async def send_welcome(message):
    chat_id = message.from_user.id


    await bot.send_message(chat_id, "<i>–∫—Ä–∞–≤—Å–∏–≤–æ –Ω–∞–ø–∏—Å–∞–Ω—ã–π —Ç–µ–∫—Å—Ç</i>")

@bot.message_handler(commands={"f3"})
async def send_welcome(message):
    chat_id = message.from_user.id


    await bot.send_message(chat_id, "<u>–≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç</u>")

@bot.message_handler(commands={"f4"})
async def send_welcome(message):
    chat_id = message.from_user.id


    await bot.send_message(chat_id, "<s>–∑–∞—á—ë—Ä–∫–Ω—É—Ç—ã —Ç–µ–∫—Å—Ç</s>")

@bot.message_handler(commands={"f5"})
async def send_welcome(message):
    chat_id = message.from_user.id


    await bot.send_message(chat_id, "<code>–º–æ–Ω–æ—à–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</code>")

@bot.message_handler(commands={"f6"})
async def send_welcome(message):
    chat_id = message.from_user.id


    await bot.send_message(chat_id, "<pre>–º–æ–Ω–æ—à–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç 2</pre>")

@bot.message_handler(commands={"f7"})
async def send_welcome(message):
    chat_id = message.from_user.id


    await bot.send_message(chat_id, "<tg-spoiler>—Å–ø–æ–π–ª–µ—Ä</tg-spoiler>")

@bot.message_handler(commands={"f8"})
async def send_welcome(message):
    chat_id = message.from_user.id
    print(chat_id)


    await bot.send_message(chat_id, '<a href="https://avatars.dzeninfra.ru/get-zen_doc/3507111/pub_619a6f2dfd60084f33dd81ce_619a719051fb0a58db46e147/scale_1200">cc—ã–ª–∫–∞</a>')

@bot.message_handler(commands={"f9"})
async def send_welcome(message):
    chat_id = message.from_user.id


    await bot.send_message(chat_id, '<a href="tg://user?id=5525272373">–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</a>')

@bot.message_handler(commands={"edit"})
async def send_welcome(message):
    chat_id = message.from_user.id
    bot_message = await bot.send_message(chat_id, "–ù–∞—á–∞–ª—Å—è —Ç–∞–π–º–µ—Ä 5 —Å–µ–∫—É–Ω–¥")
    for i in range(1,6):
        await asyncio.sleep(1)
        await bot.edit_message_text(f"{5-i} —Å–µ–∫—É–Ω–¥ –æ—Å—Ç–∞–ª–æ—Å—å", chat_id, bot_message.id)
    await bot . delete_message(chat_id, bot_message.id)


@bot.message_handler(commands={"play"})
async def send_welcome(message):
    chat_id = message.from_user.id
    bot_message = await bot.send_dice(chat_id, "üé≤")
    print(bot_message.dice.value)

@bot.message_handler(commands={"sticker"})
async def send_welcome(message):
    chat_id = message.from_user.id
    await bot.send_sticker(chat_id, "CAACAgIAAxkBAAIiAWSkCvMQEYNvjXijI2937WG2KoZxAAL6AgACpFmlEpCt9UO6SPQELwQ")

@bot.message_handler(commands={"file"})
async def send_welcome(message):
    chat_id = message.from_user.id
    await bot.send_document(chat_id, open("text.txt", "rb"))

@bot.message_handler(commands={"location"})
async def send_welcome(message):
    chat_id = message.from_user.id
    await bot.send_location(chat_id, 48.59439179295278, 38.00024657228844)

@bot.message_handler(commands={"photo"})
async def send_welcome(message):
    chat_id = message.from_user.id
    await bot.send_photo(chat_id, "https://pics.wikireality.ru/upload/1/14/EeeRock.jpg", caption="–õ–µ—Ç–æ–≤ –≤–æ—Å–∫—Ä–µ—Å:")




@bot.message_handler(commands={"menu"})
async def send_welcome(message):
    chat_id =message.chat.id
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add("/start")
    markup.add("/play")
    markup.add("/sticker")
    markup.add("/file")
    markup.add("/location")
    markup.add("/photo")
    await bot.send_message(chat_id, "–º–µ–Ω—é –∫–Ω–æ–ø–æ–∫", reply_markup=markup)

def generate_reply_keyboard(list_buttons, row):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(*list_buttons, row_width=row)
    return  markup

@bot.message_handler(commands={"menu"})
async def send_welcome(message):
    chat_id = message.from_user.id
    list_buttons = "–ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞", "–í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞", "–¢—Ä–µ—Ç—å—è –∫–Ω–æ–ø–∫–∞"
    await bot.send_message(chat_id, "–≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∫–Ω–æ–ø–æ–∫", reply_markup=generate_reply_keyboard(list_buttons,2))


class InlineKeyboadMurkup:
    pass


@bot.message_handler(commands={"menu2"})
async def send_welcome(message):
    chat_id = message.from_user.id
    markup = InlineKeyboadMurkup()
    button1 = InlineKeyboardButton("–ü–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞", callback_data="first")
    button2 = InlineKeyboardButton("–í—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞", callback_data="second")
    button3 = InlineKeyboardButton("–¢—Ä–µ—Ç—å—è –∫–Ω–æ–ø–∫–∞", callback_data="three")
    markup.add(button1)
    markup.add(button2)
    markup.add(button3)
    await bot.send_message(chat_id, "–ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –∫–Ω–æ–ø–æ–∫", reply_markup=markup)

@bot.message_handler(func=lambda message: True)
async def echo_message(message):
    text_message = message.text
    text_message = text_message.lower()
    if "–¥–µ–ª–∞" in text_message or "–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ" in text_message:
        await bot.reply_to(message, "–•–æ—Ä–æ—à–æ, –∞ —É —Ç–µ–±—è?")
    elif "–ø–æ–≥–æ–¥–∞" in text_message:
        await bot.reply_to(message, "–û—Ç–ª–∏—á–Ω–∞—è")
    else:
        await bot.reply_to(message, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª")



import asyncio

asyncio.run(bot.polling())
